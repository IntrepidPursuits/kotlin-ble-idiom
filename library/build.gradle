apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'kotlin-android'
apply from: "../library_versions.gradle"
apply from: 'coverage.gradle'

group = 'com.github.intrepidpursuits'

android {
    compileSdkVersion 25
    buildToolsVersion "26.0.3"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "0.0.1"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            // testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }

    packagingOptions {
        exclude 'META-INF/rxkotlin_main.kotlin_module'
        exclude 'META-INF/rxkotlin.properties'
    }
}

afterEvaluate {
    android.sourceSets.all { sourceSet ->
        if (!sourceSet.name.startsWith('test') || !sourceSet.name.startsWith('androidTest')) {
            sourceSet.kotlin.setSrcDirs([])
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

artifacts {
    archives sourcesJar
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.21"

    implementation "com.android.support:appcompat-v7:$supportVersion"

    implementation "com.polidea.rxandroidble:rxandroidble:$rxBleVersion"
    implementation "io.reactivex:rxjava:$rx1Version"
    implementation "io.reactivex:rxandroid:$rx1AndroidVersion"
    implementation "io.reactivex:rxkotlin:$rx1KotlinVersion"

    implementation 'io.arrow-kt:arrow-core:0.6.0'
    implementation 'io.arrow-kt:arrow-syntax:0.6.0'

    implementation "at.favre.lib:bytes:0.4.6"

    implementation "com.github.akarnokd:rxjava2-interop:0.10.9"

    implementation "io.reactivex.rxjava2:rxandroid:$rx2AndroidVersion"
    implementation "io.reactivex.rxjava2:rxkotlin:$rx2KotlinVersion"
    api "io.reactivex.rxjava2:rxjava:$rx2Version"

    implementation "com.github.salomonbrys.kodein:kodein:$kodeinVersion"
    implementation "com.github.salomonbrys.kodein:kodein-android:$kodeinVersion"
    implementation "com.github.salomonbrys.kodein:kodein-conf:$kodeinVersion"

    // The classes in 'io.intrepid.bleidiom.test' are never called in
    // the code of an app, but still should compile.
    // Tests in an app that want to use these classes in 'io.intrepid.bleidiom.test'
    // should use 'testImplementation' on the list of libraries below.
    compileOnly "com.github.salomonbrys.kodein:kodein-conf:$kodeinVersion"
    compileOnly "com.nhaarman:mockito-kotlin-kt1.1:$kotlinMockitoVersion"
    compileOnly "org.powermock:powermock-api-mockito2:$powerMockVersion"
    compileOnly "com.polidea.rxandroidble:mockclient:$rxBleVersion"

    testImplementation "junit:junit:4.12"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlinTestVersion"
    testImplementation "org.powermock:powermock-module-junit4:$powerMockVersion"

    // Here we must implement the provided libraries, since the tests will
    // actually run tests based on classes in 'io.intrepid.bleidiom.test'
    testImplementation "com.nhaarman:mockito-kotlin-kt1.1:$kotlinMockitoVersion"
    testImplementation "org.powermock:powermock-api-mockito2:$powerMockVersion"
    testImplementation "com.polidea.rxandroidble:mockclient:$rxBleVersion"
}
