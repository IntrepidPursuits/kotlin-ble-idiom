apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.8.0"
}

// change the buildType and productFlavor fields here if the project uses different build variant for testing
def buildType = "debug";
def productFlavor = "";
def buildVariant = "${productFlavor.capitalize()}${buildType.capitalize()}";
def buildVariantDirectory = productFlavor.length() > 0 ? "${productFlavor}/${buildType}" : buildType

def sourceDir = 'src/main/kotlin'
def classDir = "${buildDir}/tmp/kotlin-classes/${buildVariantDirectory}"
def classDirJava = "${buildDir}/intermediates/classes/${buildVariantDirectory}"
def unitTestCoverageData = "${buildDir}/jacoco/test${buildVariant}UnitTest.exec"

def coverageSourceDirs = files([sourceDir])

def coverageClassDirs = fileTree(
        dir: classDir,
        excludes: []
)

def coverageClassDirsJava = fileTree(
        dir: classDirJava,
        excludes: ['**/R.class',
                   '**/R$*.class',
                   '**/BuildConfig.*',
                   '**/Manifest*.*',
                   'com/android/**/*.class',
                   '**/*_ViewBind*' // ButterKnife auto generated classes
        ]
)

// testCoverageEnabled messes up debugging/etc, so we want it disabled most of times.
// unit test coverage reports seems to work fine even with the flag disabled, but the
// instrumentation tests need this flag otherwise the coverage data may be incomplete
def startTaskNames = gradle.startParameter.taskNames
def isRunningInstrumentationCoverage = startTaskNames.contains('instrumentationTestCoverage') || startTaskNames.contains('testCoverage')

// Run and generate the report for the  Kotlin unit tests.
task unitTestCoverage(type: JacocoReport, dependsOn: "test${buildVariant}UnitTest") {
    sourceDirectories = coverageSourceDirs
    classDirectories = files(coverageClassDirs, coverageClassDirsJava)
    executionData = files(unitTestCoverageData)

    doLast {
        println "You can view the coverage report at:"
        println "${buildDir}/reports/jacoco/unitTestCoverage/html/index.html"
    }

    reports {
        xml.enabled true
        xml.destination "${buildDir}/reports/jacoco/unitTestCoverage/jacoco.xml"
    }
}

android {
    buildTypes {
        debug {
            testCoverageEnabled(isRunningInstrumentationCoverage)
        }
    }

    testOptions {
        unitTests.all {
            jacoco {
                // needed so that Robolectric tests are included in the results
                includeNoLocationClasses = true
            }
        }
    }
}
